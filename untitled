%% Simulation of Complex Systems                          %%
%% Kakkos Ioannis 930413-6030                             %%
%% Exercise 6.1 Diffusion regimes for a Brownian particle %%
%% Overdamped Brownian particle                           %%

particles = 10^4;
totalSimTime = 10^1;                    % 10 seconds total sim time
trajectory = zeros(particles,2);
dt = 10^-3;                             % time increment
timesteps = totalSimTime/dt;            % timestep
kB = 1.38064*10^-23;                    % Boltzmann constant
gamma = 1.3;                            % gas constant
temperature = 300;                      % standard temperature
term = sqrt(2*kB*temperature*dt/gamma);
T = zeros(1,totalSimTime);
eMSDx = zeros(timesteps,1);
eMSDy = zeros(timesteps,1);

for j = 1:timesteps
    % create timestep array
    T(j) = j*dt;
    
    difSquaredX = 0;
    difSquaredY = 0;
    previousX = 0;
    previousY = 0;
    for i = 1:particles
        % x-direction
        r = randn;
        nextX = previousX + term * r;
        previousX = nextX;
        trajectory(i,1) = nextX;
        difSquaredX = difSquaredX + nextX^2;
     
        % y-direction
        q = randn;
        nextY = previousY + term * q;
        previousY = nextY;
        trajectory(i,2) = nextY;
        difSquaredY = difSquaredY + nextY^2;
    end
    eMSDx(j) = difSquaredX/particles;
    eMSDy(j) = difSquaredY/particles;
end

% Plotting overdamped Brownian particle
X = trajectory(:,1);
Y = trajectory(:,2);
figure;
hold on
title('Overdamped Brownian particle');
xlabel('x[m]');
ylabel('y[m]');
% xlim([-10^-9 10^-9]);
% ylim([-10^-9 10^-9]);
plot(X,Y);
hold off

% ensemble = eMSD(trajectory);
% time = tMSD(trajectory);
figure;
hold on;
title('Ensemble MSD');
xlabel('t[s]');
ylabel('MSD[m^2]');
xlim([10^-4 10]);
semilogx(T,eMSDx,'o');
hold off;

function ensmbl = eMSD(path)
RHSx = 0;
RHSy = 0;
tau = 1;
n = length(path);
ensmbl = zeros(n,2);
for i = 1:n-1
    RHSx = (path(i + tau,1) - path(tau,1))^2;
    RHSy = (path(i + tau,2) - path(tau,2))^2;
    ensmbl(i,1) = RHSx;
    ensmbl(i,2) = RHSy;
end
ensmbl1 = mean(ensmbl(:,1));
ensmbl2 = mean(ensmbl(:,2));
ensmbl = [ensmbl1 ensmbl2];

end

% function t = tMSD(path)
% 
% end
